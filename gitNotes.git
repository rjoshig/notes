GIT aliases is in home/.gitconfig


Example: Contribute to an existing repository
# download a repository on GitHub.com to our machine
git clone https://github.com/me/repo.git


Example: Contribute to an existing repository

# change into the `repo` directory
cd repo

# create a new branch to store any new changes
git branch my-branch

# switch to that branch (line of development)
git checkout my-branch

# make changes, for example, edit `file1.md` and `file2.md` using the text editor

# stage the changed files
git add file1.md file2.md

# take a snapshot of the staging area (anything that's been added)
git commit -m "my snapshot"

# push changes to github
git push --set-upstream origin my-branch


###############################################################################
Example: Start a new repository and publish it to GitHub

# create a new directory, and initialize it with git-specific functions
git init my-repo

# change into the `my-repo` directory
cd my-repo

# create the first file in the project
touch README.md

# git isn't aware of the file, stage it
git add README.md  or git add -i for interactive addinmg

# take a snapshot of the staging area
git commit -m "add README to initial commit"

# provide the path for the repository you created on github. this connects to remote repository
git remote add origin https://github.com/YOUR-USERNAME/YOUR-REPOSITORY.git

# push changes to github
git push --set-upstream origin master

https://guides.github.com/introduction/git-handbook/#basic-git
####################################################################################


create a new branch named "feature_x" and switch to it using
    git checkout -b feature_x
switch back to master       
    git checkout master

and delete the branch again
    git branch -d feature_x

a branch is not available to others unless you push the branch to your remote repository
    git push origin <branch>

##To update local repository with newest commit, execute
        git pull  in working directory 

# TAGGING
git tag 1.0.0 1b2e1d63ff  (the 1b2e1d63ff stands for the first 10 characters of the commit id you want to reference with your tag)

GIT LOG
    git log --graph --oneline --decorate --all    

    See only which files have changed: 
    git log --name-status


    git config color.ui true


#######################

gitk its UI for gitub



git branch develop
git checkout develop

git status 

##GIT LOG
git log --graph --oneline
git log --pretty=oneline --graph --decorate --all

##GIT config
git config --list

git push origin master

git tag v1



#
Update and merge your current branch with a remote
cd repository/
git pull origin master
Where origin is the remote repository, and master the remote branch.
If you don't want to merge your changes, use git fetch









Git alias
If there are commands that you use a lot, then consider using git alias. This is how to make alias for git status, then you can just type git st:

git config â€” global alias.st status




git remote show origin
git push origin <branch>
git push --set-upstream origin develop


git remote add origin https://github.com/rjoshig/qticket-book.git
git push -u origin master